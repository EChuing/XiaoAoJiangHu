
分布式技术

Spring cloud 、 Spring boot 、 soa架构、saas架构



分布式		
		将不同的机器组成一个整体，对外服务（范围广、难度大）有了这个基础，高并发、高吞吐等系统很容易构建；

		作用：解决单个物理 服务器容量、性能瓶颈 的优化手段

	要解决的问题极多，在不同的技术层面上，
		包括：分布式文件系统
		分布式缓存、分布式数据库、
		分布式计算、一些名词如Hadoop、zookeeper、MQ等都跟分布式有关。
	
	从理念上讲，分布式的实现有两种形式：

		水平扩展：当一台机器扛不住流量时，就通过添加机器的方式，将流量平分到所有服务器上，所有机器都可以提供相当的服务；

		垂直拆分：前端有多种查询需求时，一台机器扛不住，可以将不同的需求分发到不同的机器上，比如A机器处理余票查询的请求，B机器处理支付的请求。



高并发       
		
		作用：从业务角度去描述系统的能力，实现高并发的手段可以采用分布式，也可以采用诸如缓存、CDN等，当然也包括多线程；


	相对于分布式来讲，高并发在解决的问题上会集中一些，其反应的是同时有多少量：比如在线直播服务，同时有上万人观看。

		可以用分布式技术解决: 将并发流量分到不同的物理服务器上。

		其他优化手段：比如使用缓存系统，将所有的，静态内容放到CDN等；还可以使用多线程技术将一台服务器的服务能力最大化。




多线程			
		通过 软硬件 实现多个线程并发执行的技术，解决CPU调度多个进程的问题，进程看上去是同时执行（实际是交替运行的）。
		
		作用：多线程则聚焦于如何使用编程语言将CPU调度能力最大化。

		注意线程安全问题


	
	在JAVA语言中，需要对JVM内存模型、指令重排等深入了解，才能写出一份高质量的多线程代码。





分布式与高并发系统，涉及到大量的概念和知识点，如果没有系统的学习，很容易会杂糅概念而辨识不清，在面试与实际工作中都会遇到困难。