抽象类和接口类的区别

	抽象类和接口类都不能直接实例化，
				抽象变量   指向  实现所有抽象方法的 "子类" 对象
				接口变量   指向  实现所有接口方法的"类"对象
	
	抽象要被继承  
	接口要被实现

	抽象 可以做方法申明，也可以做方实现
	接口只能做方法申明

	接口里只能定义公共的静态常量
	抽象类中是普通变量

	抽象类里的抽象方法必须全部被子类所实现，如果子类不能全部实现父类抽象方法，那么该子类只能是抽象类。
	接口实现的时候，如不能全部实现接口方法，那么该类也只能为抽象类。






抽象方法只能申明，不能实现，接口是设计的结果 ，抽象类是重构的结果

7、抽象类里可以没有抽象方法

8、如果一个类里有抽象方法，那么这个类只能是抽象类

9、抽象方法要被实现，所以不能是静态的，也不能是私有的。

10、接口可继承接口，并可多继承接口，但类只能单根继承。

 2017/8/7 星期一

1.抽象类 和 接口 都是用来抽象具体对象的. 但是接口的抽象级别最高
2.抽象类可以有具体的方法 和属性,  接口只能有抽象方法和不可变常量
3.抽象类主要用来抽象类别,接口主要用来抽象功能.
4、抽象类中，且不包含任何实现，派生类必须覆盖它们。接口中所有方法都必须是未实现的。

 

当你关注一个事物的本质的时候，用抽象类；当你关注一个操作的时候，用接口。

 

抽象类的功能要远超过接口，但是，定义抽象类的代价高。因为高级语言来说（从实际设计上来说也是）每个类只能继承一个类。在这个类中，你必须继承或编写出其所有子类的

所有共性。虽然接口在功能上会弱化许多，但是它只是针对一个动作的描述。而且你可以在一个类中同时实现多个接口。在设计阶段会降低难度的。

 

接口的使用

 

接口：interface

在PHP中，我们可以规定，一个对象应该具有哪些公共的外部操作，即可使用interface来规定。
公共的方法就是接口。用于规定一个对象应该用于哪些公共的操作方法（接口），这个也叫接口（公共操作方法的集合）
即：接口（interface结构，公共方法集合）

公共方法（接口方法）
定义：用于限定某个对象所必须拥有的公共操作方法的一种结构，称之为接口（interface）
语法：定义接口结构，使用interface关键字。接口内定义的都是一些公共方法。

 

注意：
1.接口方法，访问权限必须是公共的 public
2.接口内只能有公共方法，不能存在成员变量
3.接口内只能含有未被实现的方法，也叫抽象方法，但是不用abstract关键字。

类实现接口，利用关键字implements完成。

 

 

这样，实现该接口的类，必须实现接口内所有的抽象方法。而且可以肯定，该方法一定是公共的外部操作方法。

多实现：该功能，在理论上可以通过抽象类来实现，但是抽象类，不专业。
使用接口则专业些，实现上，因为php支持多实现，而仅支持单继承。

php对象接口的支持，可以定义类常量，接口之间也可以继承