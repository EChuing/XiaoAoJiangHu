数据存储
	内存：  读取快 ； 程序关闭会丢失
	文件：  永久保存  ；  频繁IO操作，效率低 ，不方便管理
	软件：  永久保存，数据管理方便  ；  （ 数据库 ）  



存储过程

存储过程，带有逻辑的sql语句
	之前的sql没有判断条件，没有循环
	存储过程带上流程控制语句


特点：
	执行效率非常快！ 在数据库服务器上执行
	移植性很差！ 不同数据库存储过程是不可以移植的






use day16;    注意是在哪个数据库里的.

---------------------------------


DELIMITER $						-- 声明结束符号 遇到 $ 结束

CREATE PROCEDURE pro_test()		-- 存储过程的名称（参数列表）
BEGIN							-- 开始
	'可以写多个sql语句'
	SELECT * FROM employee;
	
END $							-- 结束 结束符号

------------------------------------

-- 执行过程
CALL pro_test();   --  调用  call 存储过程名称（参数）



参数:
	
	in	: 表示输入参数，可以携带数据存储过程中
	out	: 表示输出参数，可以从存储过程中返回结果
	inout: 表示输入输出参数，既可以输入，也可以输出


3.1
--------------------------
带有输入参数的存储过程
需求：传入一个员工的ID ，查询员工的信息
DELMITER $
CREATE PROCEDURE pro_findVyID(IN eid INT)
BEGIN
		SELECT * FROM employee WHERE id=eid;     --- 外表是框架 这里写语句	
EMD $

--调用
CALL pro――findById(4);





--mysql的变量

-- 全局变量（内置变量）： mysql 数据库内置变量（所有连接都起作用）
	-- 查看所有全局变量： show variables
	-- 查看某个全局变量： select @@变量名
	-- 修改全局变量： set 变量名 = 新值
	-- character_set_client: mysql服务器接收数据的编码
	-- character_set_results: mysq;服务器输出数据的编码

-- 会话变量： 只存在于当前客户端与数据库服务端的一次连接当中。
			  如果断开连接，会话数据会 全部丢失
	--定义会话变量： set @变量 = 值
	--查看会话变量： select @变量

-- 局部变量：  存储过程中使用的变量，  存储过程结束，局部变量就会丢失

